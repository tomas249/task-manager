{"version":3,"sources":["components/AvailableElements.js","components/Section/Section.js","components/Board/Board.js","components/Task/Task.js","components/NewPlaceholder/NewPlaceholder.js","components/ElementManager.js","containers/MainPage/MainPage.js","containers/App/App.js","index.js"],"names":["Element","Section","loadList","title","element","handleDelete","handleUpdate","draggable","className","style","top","left","onClick","Board","Task","url","endDate","toUpdate","textDecoration","color","cursor","target","rel","href","fontStyle","availableTypes","Object","keys","newElementForm","name","label","type","required","customStyles","content","right","bottom","marginRight","transform","backgroundColor","fontSize","overlay","Modal","setAppElement","NewPlaceholder","config","addElement","moveElement","useState","modalIsOpen","setIsOpen","elType","setElType","formData","setFormData","closeModal","handleDataChange","ev","preventDefault","value","trim","handleTypeChange","isOpen","onRequestClose","fontWeight","marginBottom","map","padding","onChange","id","htmlFor","onSubmit","newEl","String","Date","now","list","formEl","idx","autoFocus","autoComplete","marginTop","width","height","onDragOver","onDrop","stopPropagation","dataTransfer","getData","split","opId","cId","ListManager","elementId","newPhConfig","props","getElement","editElement","elId","pId","changes","entries","reduce","acc","key","newValue","prompt","allowDrop","onDragStart","setData","ElementManager","localElements","JSON","parse","localStorage","getItem","root","MainPage","elementList","setElementList","display","action","add","pIdx","elements","splice","delete","filter","deleteChild","forEach","length","move","dpId","dpIdx","update","updatedElement","setItem","stringify","removeItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0b6b275.chunk.js","sourcesContent":["import Section from \"./Section\";\nimport Board from \"./Board\";\nimport Task from \"./Task\";\n\n// const availableElements = [Section, Board, Task];\n// export const Element = availableElements.reduce((acc, fn) => ({ ...acc, [fn.name]: fn }), {});\n// export const availableTypes = availableElements.map((fn) => fn.name);\n\nexport const Element = {\n  Section,\n  Board,\n  Task,\n};\nexport const availableTypes = Object.keys(Element);\n\nexport const newElementForm = {\n  Section: [{ name: \"title\", label: \"Title\", type: \"text\", required: true }],\n  Board: [{ name: \"title\", label: \"Title\", type: \"text\", required: true }],\n  Task: [\n    { name: \"title\", label: \"Title\", type: \"text\", required: true },\n    { name: \"url\", label: \"Url\", type: \"text\", required: false },\n    { name: \"endDate\", label: \"End date\", type: \"date\", required: false },\n  ],\n};\n","import \"./Section.css\";\n\nexport default function Section({ loadList, element: { title }, handleDelete, handleUpdate }) {\n  return (\n    <div draggable className=\"section-container\">\n      <div className=\"section-title\">\n        <div style={{ top: \"20px\", left: \"-65px\" }} className=\"btn-container\">\n          <button className=\"btn-edit\" onClick={() => handleUpdate({ title })}>\n            EDIT\n          </button>\n          <button className=\"btn-delete\" onClick={handleDelete}>\n            DELETE\n          </button>\n        </div>\n        {title}\n      </div>\n      <hr />\n      <div className=\"section-taskList\">{loadList()}</div>\n    </div>\n  );\n}\n","import \"./Board.css\";\n\nexport default function Board({ loadList, element: { title }, handleDelete, handleUpdate }) {\n  return (\n    <div draggable className=\"board-container\">\n      <div style={{ top: \"0\", left: \"-65px\" }} className=\"btn-container\">\n        <button className=\"btn-edit\" onClick={() => handleUpdate({ title })}>\n          EDIT\n        </button>\n        <button className=\"btn-delete\" onClick={handleDelete}>\n          DELETE\n        </button>\n      </div>\n      <div draggable className=\"board-title\">\n        {title}\n      </div>\n      <div className=\"board-list\">{loadList()}</div>\n    </div>\n  );\n}\n","import \"./Task.css\";\n\nexport default function Task({ element: { title, url, endDate }, handleDelete, handleUpdate }) {\n  const toUpdate = { title, endDate };\n  return (\n    <div className=\"task-container\">\n      <div className=\"task\" draggable>\n        {!url && <div>{title}</div>}\n        {url && (\n          <div className=\"pointer-event\">\n            <a\n              style={{\n                textDecoration: \"none\",\n                color: \"white\",\n                cursor: \"pointer\",\n              }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n              href={url}\n            >\n              {title}\n              <span style={{ fontStyle: \"italic\", color: \"darkgray\" }}> link</span>\n            </a>\n          </div>\n        )}\n        <div>{endDate}</div>\n      </div>\n      <div style={{ top: \"10px\", left: \"-40px\" }} className=\"btn-container\">\n        <button className=\"btn-edit\" onClick={() => handleUpdate(toUpdate)}>\n          EDIT\n        </button>\n        <button className=\"btn-delete\" onClick={handleDelete}>\n          {\" \"}\n          DELETE\n        </button>\n      </div>\n    </div>\n  );\n}\n","import \"./NewPlaceholder.css\";\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { availableTypes, newElementForm } from \"../AvailableElements\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    backgroundColor: \"lightgray\",\n    color: \"black\",\n    fontSize: \"1.3rem\",\n  },\n  overlay: {\n    backgroundColor: \"rgba(176, 196, 222, 0.397)\",\n  },\n};\n\nModal.setAppElement(\"#root\");\nfunction NewPlaceholder({ config, addElement, moveElement }) {\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [elType, setElType] = useState(false);\n  const [formData, setFormData] = useState({});\n\n  const closeModal = () => {\n    setIsOpen(false);\n    setElType(false);\n  };\n  const openModal = () => setIsOpen(true);\n\n  const handleAddElement = (ev) => {\n    ev.preventDefault();\n    closeModal();\n    const newEl = {\n      ...formData,\n      type: elType,\n      id: String(Date.now()),\n      list: [],\n    };\n    addElement(newEl);\n    setFormData({});\n  };\n\n  const handleDataChange = (ev) => {\n    ev.preventDefault();\n    setFormData({ ...formData, [ev.target.name]: ev.target.value.trim() });\n  };\n\n  const handleTypeChange = (ev) => {\n    ev.preventDefault();\n    setElType(ev.target.value);\n    setFormData({ ...formData, type: ev.target.value });\n  };\n\n  const allowDrop = (ev) => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev) => {\n    ev.stopPropagation();\n    const [opId, cId] = ev.dataTransfer.getData(\"text\").split(\"-\");\n    moveElement(opId, cId);\n  };\n\n  return (\n    <>\n      <Modal isOpen={modalIsOpen} style={customStyles} onRequestClose={closeModal}>\n        {!elType && (\n          <>\n            <div style={{ fontWeight: \"bold\", marginBottom: \"5px\" }}>Choose a type:</div>\n            {availableTypes.map((type) => (\n              <div key={type} style={{ padding: \"0.5rem\" }} onChange={handleTypeChange}>\n                <input type=\"radio\" id={type} value={type} name=\"type\" required />\n                <label htmlFor={type}>{type}</label>\n              </div>\n            ))}\n          </>\n        )}\n        {elType && (\n          <form onSubmit={handleAddElement}>\n            <h3>{elType}</h3>\n            <hr />\n            {newElementForm[elType].map((formEl, idx) => (\n              <div className=\"form-element\" key={formEl.name}>\n                <label htmlFor={formEl.name}>{formEl.label}</label>\n                <br />\n                <input\n                  type={formEl.type}\n                  id={formEl.name}\n                  name={formEl.name}\n                  required={formEl.required}\n                  onChange={handleDataChange}\n                  autoFocus={!idx}\n                  autoComplete=\"off\"\n                />\n              </div>\n            ))}\n            <div style={{ marginTop: \"2rem\", width: \"100%\" }}>\n              <button style={{ width: \"100%\", height: \"3rem\" }} type=\"submit\">\n                ADD\n              </button>\n            </div>\n          </form>\n        )}\n      </Modal>\n      <div className=\"placeholder\" onClick={openModal} onDragOver={allowDrop} onDrop={onDrop}>\n        <span>+</span>\n      </div>\n    </>\n  );\n}\n\nexport default NewPlaceholder;\n","import NewPlaceholder from \"./NewPlaceholder\";\nimport { Element } from \"./AvailableElements\";\n\nexport function ListManager({ elementId, newPhConfig, ...props }) {\n  const list = props.list || props.getElement(elementId).list;\n\n  const addElement = (element) => {\n    props.editElement(elementId, \"add\")(-1, element);\n    // props.editElement(\"1613910363562\", \"move\")(\"1613910353842\", 0, \"1613910371125\");\n  };\n\n  const moveElement = (opId, cId) => {\n    props.editElement(opId, \"move\")(elementId, -1, cId);\n  };\n\n  return () => (\n    <>\n      {list.map((elId, idx) => ElementManager({ elementId: elId, pId: elementId, idx, ...props }))}\n      <NewPlaceholder config={newPhConfig} addElement={addElement} moveElement={moveElement} />\n    </>\n  );\n}\n\n//ListManager\nexport function ElementManager({ elementId, pId, idx, getElement, editElement, ...props }) {\n  const element = getElement(elementId);\n\n  const handleUpdate = (toUpdate) => {\n    const changes = Object.entries(toUpdate).reduce((acc, [key, value]) => {\n      const newValue = prompt(`New ${key}:`, value) || value;\n      return { ...acc, [key]: newValue };\n    }, {});\n    editElement(elementId, \"update\")(changes);\n  };\n\n  const handleDelete = () => {\n    editElement(pId, \"delete\")(elementId);\n  };\n\n  const loadList = ListManager({\n    ...props,\n    elementId,\n    list: element.list,\n    getElement,\n    editElement,\n  });\n\n  // DRAG\n\n  const allowDrop = (ev) => {\n    ev.preventDefault();\n  };\n\n  const onDragStart = (ev) => {\n    ev.stopPropagation();\n    ev.dataTransfer.setData(\"text\", `${pId}-${elementId}`);\n  };\n\n  const onDrop = (ev) => {\n    ev.stopPropagation();\n    const [opId, cId] = ev.dataTransfer.getData(\"text\").split(\"-\");\n    editElement(opId, \"move\")(pId, idx, cId);\n  };\n\n  return (\n    <div key={elementId} onDragOver={allowDrop} onDragStart={onDragStart} onDrop={onDrop}>\n      {Element[element.type]({ ...props, loadList, element, handleUpdate, handleDelete })}\n    </div>\n  );\n}\n","import \"./MainPage.css\";\nimport React, { useState } from \"react\";\nimport { ListManager } from \"../../components/ElementManager\";\n\nconst defaultElement = { root: { id: \"root\", list: [] } };\nconst localElements = JSON.parse(localStorage.getItem(\"elements\")) || defaultElement;\n\nfunction MainPage() {\n  const [elementList, setElementList] = useState(localElements);\n\n  const resetElementsLocally = () => localStorage.removeItem(\"elements\");\n  const saveElementsLocally = () => localStorage.setItem(\"elements\", JSON.stringify(elementList));\n  const getElement = (id) => elementList[id];\n  const editElement = (pId, action) =>\n    ({\n      add: (pIdx, element) => {\n        const cId = element.id;\n        const elements = { ...elementList };\n        elements[cId] = element;\n        if (pIdx === -1) elements[pId].list = [...elements[pId].list, cId];\n        else elements[pId].list.splice(pIdx, 0, cId);\n        setElementList(elements);\n      },\n      delete: (cId) => {\n        const elements = { ...elementList };\n        elements[pId].list = elements[pId].list.filter((elId) => elId !== cId);\n        const deleteChild = (list) =>\n          list.forEach((elId) => {\n            elements[elId].list?.length && deleteChild(elements[elId].list);\n            delete elements[elId];\n          });\n        deleteChild(elements[cId].list);\n        delete elements[cId];\n        setElementList(elements);\n      },\n      move: (dpId, dpIdx, cId) => {\n        const elements = { ...elementList };\n        elements[pId].list = elements[pId].list.filter((elId) => elId !== cId);\n        if (dpIdx === -1) elements[dpId].list = [...elements[dpId].list, cId];\n        else elements[dpId].list.splice(dpIdx, 0, cId);\n        setElementList(elements);\n      },\n      update: (updatedElement) => {\n        const elements = { ...elementList };\n        elements[pId] = { ...elements[pId], ...updatedElement };\n        setElementList(elements);\n      },\n    }[action]);\n\n  const loadList = ListManager({\n    newPhConfig: { config: { display: true } },\n    elementId: \"root\",\n    getElement,\n    editElement,\n  });\n\n  return (\n    <>\n      <div className=\"container\">{loadList()}</div>\n      <hr style={{ marginTop: \"5rem\" }} />\n      <button onClick={saveElementsLocally}>Save</button>\n      <button onClick={resetElementsLocally}>Reset</button>\n      {/* <pre>{JSON.stringify(elementList, undefined, 2)}</pre> */}\n    </>\n  );\n}\n\nexport default MainPage;\n","import \"./App.css\";\nimport MainPage from \"../MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}